{"version":3,"sources":["auth/AuthContext.jsx","types/types.jsx","components/login/LoginScreen.jsx","components/ui/Navbar.jsx","data/heroes.jsx","components/heroes/HeroCard.jsx","components/heroes/HeroList.jsx","selectors/getHeroesByPublisher.jsx","components/marvel/MarvelScreen.jsx","components/heroes/HeroScreen.jsx","selectors/getHeroById.jsx","components/dc/DcScreen.jsx","components/search/SearchScreen.jsx","selectors/getHeroesByName.jsx","hooks/useForm.jsx","routers/DashboardRoutes.jsx","routers/PrivateRoute.jsx","routers/PublicRoute.jsx","routers/AppRouter.jsx","auth/authReducer.jsx","App.js","index.js"],"names":["AuthContext","createContext","types","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","type","payload","name","replace","Navbar","user","useHistory","to","activeClassName","exact","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","key","MarvelScreen","HeroScreen","heroeId","useParams","find","length","push","goBack","DcScreen","SearchScreen","location","useLocation","queryString","parse","search","q","heroesFiltered","toLocaleLowerCase","getHeroesByName","initialState","useState","values","setValues","reset","handeInputChange","target","value","useForm","searchText","formValues","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","console","log","logged","authReducer","state","action","App","useReducer","JSON","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.821760af.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n","export const types = {\r\n    login: '[auth] login',\r\n    logout:'[auth] logout'\r\n}","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types'\r\n\r\nfunction LoginScreen({history}) {\r\n\r\n    const {dispatch} = useContext(AuthContext)\r\n\r\n\r\nconst handleLogin = () =>{\r\n    \r\n    const lastPath = localStorage.getItem('lastPath') || '/';\r\n\r\n    dispatch({\r\n        type:types.login,\r\n        payload:{\r\n            name:'jose'\r\n        }\r\n    });\r\n\r\n    history.replace(lastPath);\r\n\r\n}\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n\r\n\r\n            <h1>Login</h1>\r\n            <hr/>\r\n\r\n            <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={handleLogin}\r\n            >Login\r\n\r\n            </button>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\n","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types';\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n\r\nconst {user:{name},dispatch} = useContext(AuthContext);\r\n\r\nconst history = useHistory();\r\n\r\n\r\nconst handleLogOut = () =>{\r\n\r\n    history.replace ('/login')\r\n\r\n    dispatch({\r\n            type:types.logout\r\n        });\r\n\r\n}\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n    <span className=\"nav-item nav-link text-info\">{name}</span>\r\n                    <button \r\n                        className=\"nav-item btn btn-primary\" \r\n                        onClick={handleLogOut}\r\n                        \r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeroCard = ({\r\n    id,\r\n    superhero, \r\n    alter_ego,\r\n    first_appearance,\r\n    characters\r\n\r\n}) => {\r\n    return (\r\n        <div className=\"card ms-3\" style={{maxWidth:540}}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero}/>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{superhero}</h5>\r\n                        <p className=\"card-text\">{alter_ego}</p>\r\n                        {\r\n                            (alter_ego !== characters)\r\n                            && \r\n                            <p className=\"card-text\">{characters}</p>\r\n                        }\r\n\r\n                            <p className=\"card-text\">\r\n                                <small className=\"text-muted\">{first_appearance}</small>\r\n                            </p>\r\n\r\n                        <Link to={`./hero/${id}`}>\r\n                            Mas...\r\n                        </Link>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeroCard;\r\n","import React, { useMemo } from 'react';\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher';\r\nimport HeroCard from './HeroCard';\r\n\r\nexport const HeroList = ({publisher}) => {\r\n\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher])\r\n\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeIn\">\r\n            {\r\n                // Con la funcion Map , vamos a crear  por cada elemento , un HeroCard , \r\n                heroes.map(hero => (\r\n                    <HeroCard \r\n                        key={hero.id} \r\n                        {...hero}\r\n                     />   \r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n// Orden de los Componentes\r\n// 1-HeroList\r\n// 2-HeroCard\r\n// 3-HeroScreen\r\n","import {heroes} from '../data/heroes'\r\n\r\nexport const getHeroesByPublisher = ( publisher) => {\r\n\r\nconst validPublisher = ['DC Comics','Marvel Comics']\r\n\r\nif (!validPublisher.includes(publisher)){\r\n\r\n    throw new Error (`publisher \"${publisher}\" no es correcto`)\r\n}\r\n\r\nreturn heroes.filter ( hero => hero.publisher === publisher ) ;\r\n \r\n}","import React from 'react';\r\nimport { HeroList } from '../heroes/HeroList';\r\n\r\nconst MarvelScreen = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>MarvelScreen</h1>\r\n            <hr/>\r\n\r\n            <HeroList publisher=\"Marvel Comics\" />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarvelScreen;\r\n","import React, { useMemo } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\nconst HeroScreen = ({history}) => {\r\n\r\n// para renderizar el id de cada personaje , debemos extraer los parametros del url , \r\n// para eso utilizaremos el hook usePrams. \r\n\r\nconst {heroeId} = useParams();\r\n\r\nconst hero = useMemo (() => getHeroById(heroeId),[heroeId]);\r\n\r\n// si el hero no existe , va a redireccionar al inicio\r\nif(!hero){\r\n    return <Redirect to=\"/\" />\r\n}\r\n\r\n//esta funcion retorna la posicion anterior de la pagina , \r\n// necesitamos sustraer como props, el history.\r\nconst handleReturn = ()=>{\r\n\r\n    if(history.length <=2){\r\n        history.push('/');\r\n    }else {\r\n        history.goBack();\r\n    }\r\n}\r\n\r\nconst {\r\n    publisher,\r\n    alter_ego,\r\n    superhero,\r\n    first_appearance,\r\n    characters,\r\n}= hero;\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img \r\n                    src={`../assets/heroes/${heroeId}.jpg`} \r\n                    alt={superhero}\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                />\r\n            </div>\r\n            <div className=\"col-8 animate__animated animate__fadeInRight\">\r\n                    <h3>{superhero}</h3>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\"><b>Alter ego:</b>{alter_ego}</li>\r\n                        <li className=\"list-group-item\"><b>Publisher:</b>{publisher}</li>\r\n                        <li className=\"list-group-item\"><b>First appearance:</b>{first_appearance}</li>\r\n                    </ul>\r\n\r\n                    <h5>Characters</h5>\r\n                    <p>{characters}</p>\r\n\r\n                    <button \r\n                            className=\"btn btn-outline-info\"\r\n                            onClick={handleReturn}\r\n                    >\r\n                        Atras\r\n                    </button>\r\n\r\n                    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroScreen;\r\n","import {heroes} from '../data/heroes'\r\n\r\nexport const getHeroById = ( id) => {\r\n\r\nreturn heroes.find ( hero => hero.id === id ) ;\r\n\r\n}\r\n\r\n \r\n","import React from 'react';\r\nimport { HeroList } from '../heroes/HeroList';\r\n\r\nconst DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DcScreen</h1>\r\n            <hr/>\r\n\r\n            <HeroList publisher=\"DC Comics\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DcScreen;\r\n","import React, { useMemo } from 'react';\r\nimport queryString from 'query-string'\r\n\r\nimport HeroCard from '../heroes/HeroCard';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\nconst SearchScreen = ({history}) => {\r\n\r\nconst location = useLocation();\r\nconst {q =''} = queryString.parse (location.search)\r\n\r\n\r\n\r\n\r\nconst heroesFiltered = useMemo(() => getHeroesByName(q), [q])\r\n\r\n const[formValues,handeInputChange] = useForm ({\r\n     searchText:q\r\n\r\n })\r\nconst {searchText} = formValues;\r\n\r\n const handleSearch = (e) =>{\r\n     e.preventDefault ()\r\n     history.push(`?q=${searchText}`)\r\n }\r\n\r\n    return (\r\n        <div>\r\n            <h1>SearchScreen</h1>\r\n            <hr/>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                    <hr/>\r\n\r\n                    <form onSubmit={handleSearch}>\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Find your hero\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value={searchText}\r\n                            onChange={handeInputChange}\r\n                        />\r\n\r\n                        <button\r\n                                type=\"submit\"\r\n                                className=\"btn m-1 btn-block btn-outline-primary\"\r\n                        >Search..\r\n\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-7\">\r\n                    <h4>Result</h4>\r\n                    <hr/>\r\n\r\n                    {\r\n                        (q === '')\r\n                        &&\r\n                        <div className=\"alert alert-info\">\r\n                            Search a hero\r\n\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        (q !== '' && heroesFiltered.length === 0)\r\n                        &&\r\n                        <div className=\"alert alert-danger\">\r\n                            There is no a hero with {q}\r\n\r\n                        </div>\r\n                    }\r\n\r\n\r\n                    {\r\n                        heroesFiltered.map(hero => (\r\n                            <HeroCard \r\n                                    key={hero.id}\r\n                                    {...hero}\r\n                            \r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchScreen;\r\n","import {heroes} from '../data/heroes'\r\n\r\nexport const getHeroesByName = ( name = '') =>{\r\n\r\nif (name === ''){\r\n    return []\r\n}\r\n\r\nname = name.toLocaleLowerCase ();\r\nreturn heroes.filter (hero => hero.superhero.toLocaleLowerCase().includes(name));\r\n\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) =>{\r\n\r\nconst [values, setValues] = useState(initialState)\r\n\r\n\r\nconst reset = () => {\r\n    setValues(initialState);\r\n}\r\n\r\nconst handeInputChange = ({target}) => {\r\n\r\n    setValues({\r\n        ...values,\r\n        [target.name] :target.value\r\n    });\r\n}\r\n\r\nreturn [values,handeInputChange,reset]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Navbar } from '../components/ui/Navbar';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport MarvelScreen from '../components/marvel/MarvelScreen';\r\nimport HeroScreen from '../components/heroes/HeroScreen';\r\nimport DcScreen from '../components/dc/DcScreen';\r\nimport SearchScreen from '../components/search/SearchScreen';\r\n\r\nconst DashboardRoutes = () => {\r\n    // sistema de Rutas Hijas\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div className=\"container mt-4\">\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={MarvelScreen}/>\r\n                    <Route exact path=\"/hero/:heroeId\" component={HeroScreen}/>\r\n                    <Route exact path=\"/dc/\" component={DcScreen}/>\r\n                    <Route exact path=\"/search/\" component={SearchScreen}/>\r\n                    \r\n\r\n                    <Redirect to=\"/marvel\" />\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DashboardRoutes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\nlocalStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n            <Route {...rest}\r\n                    component={(props) => (\r\n                        (isAuthenticated)\r\n                        ?( <Component {...props} />)\r\n                        :( <Redirect to=\"/login\" />)\r\n                    )}\r\n            \r\n            />\r\n    )\r\n}\r\nPrivateRoute.propTypes={\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n            <Route {...rest}\r\n                    component={(props) => (\r\n                        ( !isAuthenticated)\r\n                        ?( <Component {...props} />)\r\n                        :( <Redirect to=\"/\" />)\r\n                    )}\r\n            \r\n            />\r\n    )\r\n}\r\nPublicRoute.propTypes={\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}\r\n","import React, { useContext } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n\r\n} from \"react-router-dom\";\r\nimport LoginScreen from '../components/login/LoginScreen';\r\nimport DashboardRoutes from './DashboardRoutes';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\n// Este es el sistema principal de rutas\r\nconst AppRouter = () => {\r\n\r\n\r\nconst {user} = useContext(AuthContext);\r\nconsole.log(user);\r\n\r\n    return (\r\n        <Router>\r\n      <div>\r\n            <Switch>   \r\n\r\n                <PublicRoute\r\n                  exact \r\n                  path=\"/login\" \r\n                  component={LoginScreen} \r\n                  isAuthenticated={user.logged}\r\n\r\n                />\r\n\r\n                <PrivateRoute \r\n                  path=\"/\" \r\n                  component={DashboardRoutes}\r\n                  isAuthenticated={user.logged}\r\n                />\r\n\r\n            </Switch>\r\n      </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state ={},action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                ...action.payload,\r\n                logged:true\r\n            }\r\n            \r\n            case types.logout:\r\n                return{\r\n                    logged:false\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer, useEffect } from 'react';\nimport AppRouter from './routers/AppRouter';\nimport { AuthContext } from './auth/AuthContext';\nimport { authReducer } from './auth/authReducer';\n\n\nfunction App() {\n\n  const init = () => {\n    return JSON.parse(localStorage.getItem('user')) || {\n      logged:false\n    }\n  }\n\nconst [user, dispatch] = useReducer(authReducer, {}, init)\n\nuseEffect(() => {\n//  con este useEffect vamos a grabar en el localstorage , este user si el usuario Cambia.\n// se va a disparar cada vez que el usuario cambie\n  localStorage.setItem('user',JSON.stringify(user))\n  \n}, [user])\n\n  return (\n\n    <div className=\"App\">\n\n        <AuthContext.Provider value={{user,dispatch}}>\n          \n          <AppRouter/>\n\n        </AuthContext.Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}